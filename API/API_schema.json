{
  "openapi": "3.0.0",
  "info": {
    "title": "FractiAI API",
    "description": "API for interacting with FractiAI's fractal intelligence system",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.fractiai.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://staging.fractiai.com/v1",
      "description": "Staging server"
    }
  ],
  "paths": {
    "/process": {
      "post": {
        "summary": "Process input through FractiAI system",
        "description": "Transform input data using fractal patterns and SAUUHUPP principles",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessOutput"
                }
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "post": {
        "summary": "Analyze patterns using FractiScope",
        "description": "Perform deep pattern analysis across dimensions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzeOutput"
                }
              }
            }
          }
        }
      }
    },
    "/optimize": {
      "post": {
        "summary": "Optimize system parameters",
        "description": "Optimize FractiAI components using fractal patterns",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Optimization results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizeOutput"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Get system metrics",
        "description": "Retrieve performance and health metrics",
        "parameters": [
          {
            "name": "component",
            "in": "query",
            "description": "Specific component to get metrics for",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "System metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProcessInput": {
        "type": "object",
        "required": ["data", "config"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Input data array"
          },
          "config": {
            "type": "object",
            "properties": {
              "dimensions": {
                "type": "integer",
                "minimum": 1,
                "default": 3
              },
              "recursive_depth": {
                "type": "integer",
                "minimum": 1,
                "default": 5
              }
            }
          }
        }
      },
      "ProcessOutput": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "metrics": {
            "type": "object",
            "properties": {
              "coherence": {
                "type": "number"
              },
              "efficiency": {
                "type": "number"
              }
            }
          }
        }
      },
      "AnalyzeInput": {
        "type": "object",
        "required": ["patterns"],
        "properties": {
          "patterns": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "config": {
            "type": "object",
            "properties": {
              "analysis_depth": {
                "type": "integer",
                "default": 3
              }
            }
          }
        }
      },
      "AnalyzeOutput": {
        "type": "object",
        "properties": {
          "fractal_metrics": {
            "type": "object",
            "properties": {
              "dimension": {
                "type": "number"
              },
              "complexity": {
                "type": "number"
              }
            }
          },
          "patterns": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "OptimizeInput": {
        "type": "object",
        "required": ["parameters", "objective"],
        "properties": {
          "parameters": {
            "type": "object"
          },
          "objective": {
            "type": "string"
          },
          "constraints": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "OptimizeOutput": {
        "type": "object",
        "properties": {
          "optimal_parameters": {
            "type": "object"
          },
          "objective_value": {
            "type": "number"
          },
          "convergence": {
            "type": "object"
          }
        }
      },
      "MetricsOutput": {
        "type": "object",
        "properties": {
          "system_health": {
            "type": "number"
          },
          "component_metrics": {
            "type": "object"
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    }
  }
}
